<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DY.UrlRewriter</name>
    </assembly>
    <members>
        <member name="T:DY.UrlRewriter.Transforms.UpperTransform">
            <summary>
            Transforms the input to upper case.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.IRewriteTransform">
            <summary>
            Interface for transforming replacements.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.IRewriteTransform.ApplyTransform(System.String)">
            <summary>
            Applies a transformation to the input string.
            </summary>
            <param name="input">The input string.</param>
            <returns>The transformed string.</returns>
        </member>
        <member name="P:DY.UrlRewriter.IRewriteTransform.Name">
            <summary>
            The name of the transform.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Transforms.UpperTransform.ApplyTransform(System.String)">
            <summary>
            Applies a transformation to the input string.
            </summary>
            <param name="input">The input string.</param>
            <returns>The transformed string.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Transforms.UpperTransform.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Parsers.NotFoundActionParser">
            <summary>
            Summary description for NotFoundActionParser.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Parsers.RewriteActionParserBase">
            <summary>
            Summary description for RewriteActionParserBase.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.IRewriteActionParser">
            <summary>
            Interface defining a parser which parses an XML node and returns the correct
            IRewriteAction instance based on the node.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.IRewriteActionParser.Parse(System.Xml.XmlNode,System.Object)">
            <summary>
            Parses the node if possible.  The parser may be called on an action node
            that it cannot parse, if it is registered on a common verb
            which is shared by several action parsers (e.g., set).
            </summary>
            <param name="node">The node to parse.</param>
            <param name="config">The rewriter configuration.</param>
            <returns>The action parsed.  If the parser could not parse the node,
            it <strong>must</strong> return null.</returns>
        </member>
        <member name="P:DY.UrlRewriter.IRewriteActionParser.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.IRewriteActionParser.AllowsNestedActions">
            <summary>
            Whether the action allows nested actions.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.IRewriteActionParser.AllowsAttributes">
            <summary>
            Whether the action allows attributes.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.RewriteActionParserBase.Parse(System.Xml.XmlNode,System.Object)">
            <summary>
            Parses the action.
            </summary>
            <param name="node">The node to parse.</param>
            <param name="config">The rewriter configuration.</param>
            <returns>The parsed action, null if no action parsed.</returns>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.RewriteActionParserBase.ParseConditions(System.Xml.XmlNode,System.Collections.IList,System.Boolean,System.Object)">
            <summary>
            Parses conditions from the node.
            </summary>
            <param name="node">The node.</param>
            <param name="conditions">Conditions list to add new conditions to.</param>
            <param name="negative">Whether the conditions should be negated.</param>
            <param name="config">Rewriter configuration</param>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.RewriteActionParserBase.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.RewriteActionParserBase.AllowsNestedActions">
            <summary>
            Whether the action allows nested actions.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.RewriteActionParserBase.AllowsAttributes">
            <summary>
            Whether the action allows attributes.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.NotFoundActionParser.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.NotFoundActionParser.Parse(System.Xml.XmlNode,System.Object)">
            <summary>
            Parses the node.
            </summary>
            <param name="node">The node to parse.</param>
            <param name="config">The rewriter configuration.</param>
            <returns>The parsed action, or null if no action parsed.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.NotFoundActionParser.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.NotFoundActionParser.AllowsNestedActions">
            <summary>
            Whether the action allows nested actions.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.NotFoundActionParser.AllowsAttributes">
            <summary>
            Whether the action allows attributes.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Parsers.ExistsConditionParser">
            <summary>
            Parser for exists conditions.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.IRewriteConditionParser">
            <summary>
            Interface defining a parser which parses an XML node and returns the correct
            IRewriteCondition instance based on the node.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.IRewriteConditionParser.Parse(System.Xml.XmlNode)">
            <summary>
            Parses the node if possible.  The parser may be called on a condition
            that it cannot parse, if it is registered on a common verb
            which is shared by several condition parsers (e.g., and).
            </summary>
            <param name="node">The node to parse.</param>
            <returns>The condition parsed.  If the parser could not parse the node,
            it <strong>must</strong> return null.</returns>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.ExistsConditionParser.Parse(System.Xml.XmlNode)">
            <summary>
            Parses the condition.
            </summary>
            <param name="node">The node to parse.</param>
            <returns>The condition parsed, or null if nothing parsed.</returns>
        </member>
        <member name="T:DY.UrlRewriter.Parsers.UnlessConditionActionParser">
            <summary>
            Parses the IFNOT node.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Parsers.IfConditionActionParser">
            <summary>
            Parses the IF node.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.IfConditionActionParser.Parse(System.Xml.XmlNode,System.Object)">
            <summary>
            Parses the action.
            </summary>
            <param name="node">The node to parse.</param>
            <param name="config">The rewriter configuration.</param>
            <returns>The parsed action, null if no action parsed.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.IfConditionActionParser.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.IfConditionActionParser.AllowsNestedActions">
            <summary>
            Whether the action allows nested actions.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.IfConditionActionParser.AllowsAttributes">
            <summary>
            Whether the action allows attributes.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.UnlessConditionActionParser.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Parsers.RedirectActionParser">
            <summary>
            Summary description for RedirectActionParser.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.RedirectActionParser.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.RedirectActionParser.Parse(System.Xml.XmlNode,System.Object)">
            <summary>
            Parses the node.
            </summary>
            <param name="node">The node to parse.</param>
            <param name="config">The rewriter configuration.</param>
            <returns>The parsed action, or null if no action parsed.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.RedirectActionParser.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.RedirectActionParser.AllowsNestedActions">
            <summary>
            Whether the action allows nested actions.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.RedirectActionParser.AllowsAttributes">
            <summary>
            Whether the action allows attributes.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Configuration.RewriterConfigurationSectionHandler">
            <summary>
            Configuration section handler for the rewriter section.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Configuration.RewriterConfigurationSectionHandler.System#Configuration#IConfigurationSectionHandler#Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            Creates the settings object.
            </summary>
            <param name="parent">The parent node.</param>
            <param name="configContext">The configuration context.</param>
            <param name="section">The section.</param>
            <returns>The settings object.</returns>
        </member>
        <member name="T:DY.UrlRewriter.Configuration.RewriterConfiguration">
            <summary>
            Configuration for the URL rewriter.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Configuration.RewriterConfiguration.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Configuration.RewriterConfiguration.Create">
            <summary>
            Creates a new configuration with only the default entries.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DY.UrlRewriter.Configuration.RewriterConfiguration.Load">
            <summary>
            Loads the configuration from the .config file, with caching.
            </summary>
            <returns>The configuration.</returns>
        </member>
        <member name="M:DY.UrlRewriter.Configuration.RewriterConfiguration.LoadFromFile(System.String)">
            <summary>
            Loads the configuration from an external XML file.
            </summary>
            <param name="filename">The filename of the file to load configuration from.</param>
            <returns>The configuration.</returns>
        </member>
        <member name="M:DY.UrlRewriter.Configuration.RewriterConfiguration.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Loads the configuration from an XML node.
            </summary>
            <param name="node">The XML node to load configuration from.</param>
            <returns>The configuration.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Configuration.RewriterConfiguration.Rules">
            <summary>
            The rules.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Configuration.RewriterConfiguration.ActionParserFactory">
            <summary>
            The action parser factory.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Configuration.RewriterConfiguration.TransformFactory">
            <summary>
            The transform factory.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Configuration.RewriterConfiguration.ConditionParserPipeline">
            <summary>
            The condition parser pipeline.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Configuration.RewriterConfiguration.ErrorHandlers">
            <summary>
            Dictionary of error handlers.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Configuration.RewriterConfiguration.Logger">
            <summary>
            Logger to use for logging information.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Configuration.RewriterConfiguration.DefaultDocuments">
            <summary>
            Collection of default document names to use if the result of a rewriting
            is a directory name.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Configuration.RewriterConfiguration.Current">
            <summary>
            The current configuration.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Conditions.AddressCondition">
            <summary>
            Matches on the current remote IP address.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.IRewriteCondition">
            <summary>
            Interface for conditions.  Note that Conditions must be thread-safe as there is a single
            instance of each condition.  This means that you must not make any changes to fields/properties
            on the condition once its created.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.IRewriteCondition.IsMatch(DY.UrlRewriter.RewriteContext)">
            <summary>
            Determines if the condition matches.
            </summary>
            <param name="context">The rewrite context.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="M:DY.UrlRewriter.Conditions.AddressCondition.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="pattern"></param>
        </member>
        <member name="M:DY.UrlRewriter.Conditions.AddressCondition.IsMatch(DY.UrlRewriter.RewriteContext)">
            <summary>
            Determines if the condition is matched.
            </summary>
            <param name="context">The rewriting context.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="T:DY.UrlRewriter.Utilities.Message">
            <summary>
            Message ids
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Transforms.LowerTransform">
            <summary>
            Transforms the input to lower case.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Transforms.LowerTransform.ApplyTransform(System.String)">
            <summary>
            Applies a transformation to the input string.
            </summary>
            <param name="input">The input string.</param>
            <returns>The transformed string.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Transforms.LowerTransform.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Transforms.DecodeTransform">
            <summary>
            Url decodes the input.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Transforms.DecodeTransform.ApplyTransform(System.String)">
            <summary>
            Applies a transformation to the input string.
            </summary>
            <param name="input">The input string.</param>
            <returns>The transformed string.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Transforms.DecodeTransform.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Conditions.MethodCondition">
            <summary>
            Matches on the current method.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Conditions.MatchCondition">
            <summary>
            Base class for MatchConditions.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Conditions.MatchCondition.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="pattern">Pattern to match.</param>
        </member>
        <member name="M:DY.UrlRewriter.Conditions.MatchCondition.IsMatch(DY.UrlRewriter.RewriteContext)">
            <summary>
            Determines if the condition is matched.
            </summary>
            <param name="context">The rewriting context.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Conditions.MatchCondition.Pattern">
            <summary>
            The pattern to match.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Conditions.MethodCondition.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="pattern"></param>
        </member>
        <member name="M:DY.UrlRewriter.Conditions.MethodCondition.IsMatch(DY.UrlRewriter.RewriteContext)">
            <summary>
            Determines if the condition is matched.
            </summary>
            <param name="context">The rewriting context.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="T:DY.UrlRewriter.Actions.NotFoundAction">
            <summary>
            Returns a 404 Not Found HTTP status code.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Actions.SetStatusAction">
            <summary>
            Sets the StatusCode.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.IRewriteAction">
            <summary>
            Interface for executable actions.  Note that Actions must be thread-safe as there is a single
            instance of each action.  This means that you must not make any changes to fields/properties
            on the action once its created.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.IRewriteAction.Execute(DY.UrlRewriter.RewriteContext)">
            <summary>
            Executes the action.
            </summary>
            <remarks>
            Note that it is important to set the correct properties on the context
            (e.g., StatusCode, Location), rather than directly implementing the action
            (e.g., RewritePath).  This allows for the correct pipeline processing of
            all the specified rules.
            </remarks>
            <returns>The Processing directive determines how the rewriter should continue
            processing after this action has executed.</returns>
            <param name="context">The context to execute the action on.</param>
        </member>
        <member name="M:DY.UrlRewriter.Actions.SetStatusAction.#ctor(System.Net.HttpStatusCode)">
            <summary>
            Default constructor.
            </summary>
            <param name="statusCode">The status code to set.</param>
        </member>
        <member name="M:DY.UrlRewriter.Actions.SetStatusAction.Execute(DY.UrlRewriter.RewriteContext)">
            <summary>
            Executes the action.
            </summary>
            <param name="context">The rewriting context.</param>
        </member>
        <member name="P:DY.UrlRewriter.Actions.SetStatusAction.StatusCode">
            <summary>
            The status code.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Actions.NotFoundAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Parsers.SetStatusActionParser">
            <summary>
            Action parser for the set-status action.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.SetStatusActionParser.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.SetStatusActionParser.Parse(System.Xml.XmlNode,System.Object)">
            <summary>
            Parses the node.
            </summary>
            <param name="node">The node to parse.</param>
            <param name="config">The rewriter configuration.</param>
            <returns>The parsed action, or null if no action parsed.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.SetStatusActionParser.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.SetStatusActionParser.AllowsNestedActions">
            <summary>
            Whether the action allows nested actions.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.SetStatusActionParser.AllowsAttributes">
            <summary>
            Whether the action allows attributes.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Parsers.NotAllowedActionParser">
            <summary>
            Summary description for NotAllowedActionParser.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.NotAllowedActionParser.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.NotAllowedActionParser.Parse(System.Xml.XmlNode,System.Object)">
            <summary>
            Parses the node.
            </summary>
            <param name="node">The node to parse.</param>
            <param name="config">The rewriter configuration.</param>
            <returns>The parsed action, or null if no action parsed.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.NotAllowedActionParser.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.NotAllowedActionParser.AllowsNestedActions">
            <summary>
            Whether the action allows nested actions.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.NotAllowedActionParser.AllowsAttributes">
            <summary>
            Whether the action allows attributes.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.RewriteProcessing">
            <summary>
            Processing flag. Tells the rewriter how to continue processing (or not).
            </summary>
        </member>
        <member name="F:DY.UrlRewriter.RewriteProcessing.ContinueProcessing">
            <summary>
            Continue processing at the next rule.
            </summary>
        </member>
        <member name="F:DY.UrlRewriter.RewriteProcessing.StopProcessing">
            <summary>
            Halt processing.
            </summary>
        </member>
        <member name="F:DY.UrlRewriter.RewriteProcessing.RestartProcessing">
            <summary>
            Restart processing at the first rule.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Parsers.HeaderMatchConditionParser">
            <summary>
            Parser for header match conditions.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.HeaderMatchConditionParser.Parse(System.Xml.XmlNode)">
            <summary>
            Parses the condition.
            </summary>
            <param name="node">The node to parse.</param>
            <returns>The condition parsed, or null if nothing parsed.</returns>
        </member>
        <member name="T:DY.UrlRewriter.Logging.IRewriteLogger">
            <summary>
            Interface for logging info from the Rewriter.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Logging.IRewriteLogger.Debug(System.Object)">
            <summary>
            Writes a debug message.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:DY.UrlRewriter.Logging.IRewriteLogger.Info(System.Object)">
            <summary>
            Writes an informational message.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:DY.UrlRewriter.Logging.IRewriteLogger.Warn(System.Object)">
            <summary>
            Writes a warning message.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:DY.UrlRewriter.Logging.IRewriteLogger.Error(System.Object)">
            <summary>
            Writes an error.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:DY.UrlRewriter.Logging.IRewriteLogger.Error(System.Object,System.Exception)">
            <summary>
            Writes an error.
            </summary>
            <param name="message">The message to write.</param>
            <param name="exception">The exception</param>
        </member>
        <member name="M:DY.UrlRewriter.Logging.IRewriteLogger.Fatal(System.Object,System.Exception)">
            <summary>
            Writes a fatal error.
            </summary>
            <param name="message">The message to write.</param>
            <param name="exception">The exception</param>
        </member>
        <member name="T:DY.UrlRewriter.Parsers.MethodConditionParser">
            <summary>
            Parser for method conditions.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.MethodConditionParser.Parse(System.Xml.XmlNode)">
            <summary>
            Parses the condition.
            </summary>
            <param name="node">The node to parse.</param>
            <returns>The condition parsed, or null if nothing parsed.</returns>
        </member>
        <member name="T:DY.UrlRewriter.Actions.RewriteAction">
            <summary>
            Rewrites in-place.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Actions.SetLocationAction">
            <summary>
            Sets the Location.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Actions.SetLocationAction.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="location">The location (pattern) to set.</param>
        </member>
        <member name="M:DY.UrlRewriter.Actions.SetLocationAction.Execute(DY.UrlRewriter.RewriteContext)">
            <summary>
            Executes the action.
            </summary>
            <param name="context">The rewriting context.</param>
        </member>
        <member name="P:DY.UrlRewriter.Actions.SetLocationAction.Location">
            <summary>
            The location to set.  This can include replacements referencing the matched pattern,
            for example $1, $2, ... $n and ${group} as well as ${ServerVariable} and mapping, e.g., 
            ${MapName:$1}.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Actions.RewriteAction.#ctor(System.String,DY.UrlRewriter.RewriteProcessing)">
            <summary>
            Default constructor.
            </summary>
            <param name="location">The location to set.</param>
            <param name="processing">The processing directive.</param>
        </member>
        <member name="M:DY.UrlRewriter.Actions.RewriteAction.Execute(DY.UrlRewriter.RewriteContext)">
            <summary>
            Executes the action.
            </summary>
            <param name="context">The rewrite context.</param>
        </member>
        <member name="M:DY.UrlRewriter.Actions.RewriteAction.IsMatch(DY.UrlRewriter.RewriteContext)">
            <summary>
            Determines if the rewrite rule matches.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:DY.UrlRewriter.Actions.RewriteAction.Conditions">
            <summary>
            Conditions that must hold for the rule to fire.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Actions.ConditionalAction">
            <summary>
            A Conditional Action
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Actions.ConditionalAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Actions.ConditionalAction.IsMatch(DY.UrlRewriter.RewriteContext)">
            <summary>
            Determines if the action matches the current context.
            </summary>
            <param name="context">The context to match on.</param>
            <returns>True if the condition matches.</returns>
        </member>
        <member name="M:DY.UrlRewriter.Actions.ConditionalAction.Execute(DY.UrlRewriter.RewriteContext)">
            <summary>
            Executes the rule.
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:DY.UrlRewriter.Actions.ConditionalAction.Conditions">
            <summary>
            Conditions that must hold for the rule to fire.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Actions.ConditionalAction.Actions">
            <summary>
            Child rules.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Actions.AddHeaderAction">
            <summary>
            Action that adds a given header.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Actions.AddHeaderAction.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="header">The header name.</param>
            <param name="value">The header value.</param>
        </member>
        <member name="M:DY.UrlRewriter.Actions.AddHeaderAction.Execute(DY.UrlRewriter.RewriteContext)">
            <summary>
            Executes the action.
            </summary>
            <param name="context">The rewrite context.</param>
        </member>
        <member name="P:DY.UrlRewriter.Actions.AddHeaderAction.Header">
            <summary>
            The header name.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Actions.AddHeaderAction.Value">
            <summary>
            The header value.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Transforms.StaticMappingTransform">
            <summary>
            Default RewriteMapper, reads its maps from config.
            Note that the mapping is CASE-INSENSITIVE.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Transforms.StaticMappingTransform.#ctor(System.String,System.Collections.Specialized.StringDictionary)">
            <summary>
            Default constructor.
            </summary>
            <param name="name">The name of the mapping.</param>
            <param name="map">The mappings.</param>
        </member>
        <member name="M:DY.UrlRewriter.Transforms.StaticMappingTransform.ApplyTransform(System.String)">
            <summary>
            Maps the specified value in the specified map to its replacement value.
            </summary>
            <param name="input">The value being mapped.</param>
            <returns>The value mapped to, or null if no mapping could be performed.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Transforms.StaticMappingTransform.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Transforms.EncodeTransform">
            <summary>
            Url encodes the input.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Transforms.EncodeTransform.ApplyTransform(System.String)">
            <summary>
            Applies a transformation to the input string.
            </summary>
            <param name="input">The input string.</param>
            <returns>The transformed string.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Transforms.EncodeTransform.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Transforms.Base64DecodeTransform">
            <summary>
            Base 64 encodes the input.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Transforms.Base64DecodeTransform.ApplyTransform(System.String)">
            <summary>
            Applies a transformation to the input string.
            </summary>
            <param name="input">The input string.</param>
            <returns>The transformed string.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Transforms.Base64DecodeTransform.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Parsers.AddressConditionParser">
            <summary>
            Parser for address conditions.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.AddressConditionParser.Parse(System.Xml.XmlNode)">
            <summary>
            Parses the condition.
            </summary>
            <param name="node">The node to parse.</param>
            <returns>The condition parsed, or null if nothing parsed.</returns>
        </member>
        <member name="T:DY.UrlRewriter.Configuration.TransformFactory">
            <summary>
            Factory for creating transforms.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Configuration.TransformFactory.AddTransform(System.String)">
            <summary>
            Adds a transform.
            </summary>
            <param name="transformType">The type of the transform.</param>
        </member>
        <member name="M:DY.UrlRewriter.Configuration.TransformFactory.AddTransform(DY.UrlRewriter.IRewriteTransform)">
            <summary>
            Adds a transform.
            </summary>
            <param name="transform">The transform object.</param>
        </member>
        <member name="M:DY.UrlRewriter.Configuration.TransformFactory.GetTransform(System.String)">
            <summary>
            Gets a transform by name.
            </summary>
            <param name="name">The transform name.</param>
            <returns>The transform object.</returns>
        </member>
        <member name="T:DY.UrlRewriter.Parsers.UrlMatchConditionParser">
            <summary>
            Parser for url match conditions.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.UrlMatchConditionParser.Parse(System.Xml.XmlNode)">
            <summary>
            Parses the condition.
            </summary>
            <param name="node">The node to parse.</param>
            <returns>The condition parsed, or null if nothing parsed.</returns>
        </member>
        <member name="T:DY.UrlRewriter.Parsers.SetCookieActionParser">
            <summary>
            Action parser for the set-cookie action.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.SetCookieActionParser.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.SetCookieActionParser.Parse(System.Xml.XmlNode,System.Object)">
            <summary>
            Parses the node.
            </summary>
            <param name="node">The node to parse.</param>
            <param name="config">The rewriter configuration.</param>
            <returns>The parsed action, or null if no action parsed.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.SetCookieActionParser.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.SetCookieActionParser.AllowsNestedActions">
            <summary>
            Whether the action allows nested actions.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.SetCookieActionParser.AllowsAttributes">
            <summary>
            Whether the action allows attributes.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Parsers.NotImplementedActionParser">
            <summary>
            Summary description for ForbiddenActionParser.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.NotImplementedActionParser.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.NotImplementedActionParser.Parse(System.Xml.XmlNode,System.Object)">
            <summary>
            Parses the node.
            </summary>
            <param name="node">The node to parse.</param>
            <param name="config">The rewriter configuration.</param>
            <returns>The parsed action, or null if no action parsed.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.NotImplementedActionParser.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.NotImplementedActionParser.AllowsNestedActions">
            <summary>
            Whether the action allows nested actions.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.NotImplementedActionParser.AllowsAttributes">
            <summary>
            Whether the action allows attributes.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Form">
            <summary>
            Replacement for &lt;asp:form&gt; to handle rewritten form postback.
            </summary>
            <remarks>
            <p>This form should be used for pages that use the url rewriter and have
            forms that are posted back.  If you use the normal ASP.NET <see cref="T:System.Web.UI.HtmlControls.HtmlForm">HtmlForm</see>,
            then the postback will not be able to correctly resolve the postback data to the form data.
            </p>
            <p>This form is a direct replacement for the &lt;asp:form&gt; tag.
            </p>
            <p>The following code demonstrates the usage of this control.</p>
            <code>
            &lt;%@ Page language="c#" Codebehind="MyPage.aspx.cs" AutoEventWireup="false" Inherits="MyPage" %&gt;
            &lt;%@ Register TagPrefix="url" Namespace="DY.UrlRewriter" Assembly="DY.UrlRewriter" %&gt;
            &lt;html&gt;
            ...
            &lt;body&gt;
            &lt;url:form id="MyForm" runat="server"&gt;
            ...
            &lt;/url:form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
            </code>
            </remarks>
        </member>
        <member name="M:DY.UrlRewriter.Form.RenderChildren(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders children of the form control.
            </summary>
            <param name="writer">The output writer.</param>
            <exclude />
        </member>
        <member name="M:DY.UrlRewriter.Form.RenderAttributes(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders attributes.
            </summary>
            <param name="writer">The output writer.</param>
            <exclude />
        </member>
        <member name="T:DY.UrlRewriter.Utilities.MessageProvider">
            <summary>
            Message provider.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Utilities.MapPath">
            <summary>
            Map path delegate
            </summary>
            <param name="url">The url to map</param>
            <returns>The physical path.</returns>
        </member>
        <member name="T:DY.UrlRewriter.Utilities.IContextFacade">
            <summary>
            Interface for a facade to the context.  Useful for plugging out the HttpContext object
            in unit tests.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.IContextFacade.GetApplicationPath">
            <summary>
            Retrieves the application path.
            </summary>
            <returns>The application path.</returns>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.IContextFacade.GetRawUrl">
            <summary>
            Retrieves the raw url.
            </summary>
            <returns>The raw url.</returns>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.IContextFacade.GetRequestUrl">
            <summary>
            Retrieves the current request url.
            </summary>
            <returns>The request url.</returns>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.IContextFacade.SetStatusCode(System.Int32)">
            <summary>
            Sets the status code for the response.
            </summary>
            <param name="code">The status code.</param>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.IContextFacade.RewritePath(System.String)">
            <summary>
            Rewrites the request to the new url.
            </summary>
            <param name="url">The new url to rewrite to.</param>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.IContextFacade.SetRedirectLocation(System.String)">
            <summary>
            Sets the redirection location to the given url.
            </summary>
            <param name="url">The url of the redirection location.</param>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.IContextFacade.AppendHeader(System.String,System.String)">
            <summary>
            Appends a header to the response.
            </summary>
            <param name="name">The header name.</param>
            <param name="value">The header value.</param>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.IContextFacade.AppendCookie(System.Web.HttpCookie)">
            <summary>
            Adds a cookie to the response.
            </summary>
            <param name="cookie">The cookie to add.</param>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.IContextFacade.HandleError(DY.UrlRewriter.IRewriteErrorHandler)">
            <summary>
            Handles an error with the error handler.
            </summary>
            <param name="handler">The error handler to use.</param>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.IContextFacade.SetItem(System.Object,System.Object)">
            <summary>
            Sets a context item.
            </summary>
            <param name="item">The item key</param>
            <param name="value">The item value</param>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.IContextFacade.GetItem(System.Object)">
            <summary>
            Retrieves a context item.
            </summary>
            <param name="item">The item key.</param>
            <returns>The item value.</returns>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.IContextFacade.GetHttpMethod">
            <summary>
            Retrieves the HTTP method used by the request.
            </summary>
            <returns>The HTTP method.</returns>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.IContextFacade.GetServerVariables">
            <summary>
            Gets a collection of server variables.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.IContextFacade.GetHeaders">
            <summary>
            Gets a collection of headers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.IContextFacade.GetCookies">
            <summary>
            Gets a collection of cookies.
            </summary>
            <returns></returns>
        </member>
        <member name="P:DY.UrlRewriter.Utilities.IContextFacade.MapPath">
            <summary>
            Delegate to use for mapping paths.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Configuration.ConditionParserPipeline">
            <summary>
            Pipeline for creating the Condition parsers.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Configuration.ConditionParserPipeline.AddParser(System.String)">
            <summary>
            Adds a parser.
            </summary>
            <param name="parserType">The parser type.</param>
        </member>
        <member name="M:DY.UrlRewriter.Configuration.ConditionParserPipeline.AddParser(DY.UrlRewriter.IRewriteConditionParser)">
            <summary>
            Adds a parser.
            </summary>
            <param name="parser">The parser.</param>
        </member>
        <member name="T:DY.UrlRewriter.Configuration.ActionParserFactory">
            <summary>
            Factory for creating the action parsers.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Configuration.ActionParserFactory.AddParser(System.String)">
            <summary>
            Adds a parser.
            </summary>
            <param name="parserType">The parser type.</param>
        </member>
        <member name="M:DY.UrlRewriter.Configuration.ActionParserFactory.AddParser(DY.UrlRewriter.IRewriteActionParser)">
            <summary>
            Adds a parser.
            </summary>
            <param name="parser">The parser.</param>
        </member>
        <member name="M:DY.UrlRewriter.Configuration.ActionParserFactory.GetParsers(System.String)">
            <summary>
            Returns a list of parsers for the given verb.
            </summary>
            <param name="verb">The verb.</param>
            <returns>A list of parsers</returns>
        </member>
        <member name="T:DY.UrlRewriter.Conditions.PropertyMatchCondition">
            <summary>
            Performs a property match.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Conditions.PropertyMatchCondition.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="propertyName"></param>
            <param name="pattern"></param>
        </member>
        <member name="M:DY.UrlRewriter.Conditions.PropertyMatchCondition.IsMatch(DY.UrlRewriter.RewriteContext)">
            <summary>
            Determines if the condition is matched.
            </summary>
            <param name="context">The rewriting context.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Conditions.PropertyMatchCondition.PropertyName">
            <summary>
            The property name.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.FormRewriterControlAdapter">
            <summary>
            ControlAdapter for rewriting form actions
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.FormRewriterControlAdapter.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control.
            </summary>
            <param name="writer">The writer to write to</param>
        </member>
        <member name="T:DY.UrlRewriter.Conditions.NegativeCondition">
            <summary>
            Performs a negation of the given conditions.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Conditions.NegativeCondition.#ctor(DY.UrlRewriter.IRewriteCondition)">
            <summary>
            Default constructor.
            </summary>
            <param name="chainedCondition"></param>
        </member>
        <member name="M:DY.UrlRewriter.Conditions.NegativeCondition.IsMatch(DY.UrlRewriter.RewriteContext)">
            <summary>
            Determines if the condition is matched.
            </summary>
            <param name="context">The rewriting context.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="T:DY.UrlRewriter.Actions.SetCookieAction">
            <summary>
            Action that sets a cookie.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Actions.SetCookieAction.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="cookieName">The cookie name.</param>
            <param name="cookieValue">The cookie value.</param>
        </member>
        <member name="M:DY.UrlRewriter.Actions.SetCookieAction.Execute(DY.UrlRewriter.RewriteContext)">
            <summary>
            Executes the action.
            </summary>
            <param name="context">The rewrite context.</param>
        </member>
        <member name="P:DY.UrlRewriter.Actions.SetCookieAction.Name">
            <summary>
            The name of the variable.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Actions.SetCookieAction.Value">
            <summary>
            The value of the variable.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Actions.RedirectAction">
            <summary>
            Redirect using 302 temporary redirect.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Actions.RedirectAction.#ctor(System.String,System.Boolean)">
            <summary>
            Default constructor.
            </summary>
            <param name="location">The location to set.</param>
            <param name="permanent">Whether the redirection is permanent.</param>
        </member>
        <member name="M:DY.UrlRewriter.Actions.RedirectAction.Execute(DY.UrlRewriter.RewriteContext)">
            <summary>
            Executes the action.
            </summary>
            <param name="context">The rewriting context.</param>
        </member>
        <member name="M:DY.UrlRewriter.Actions.RedirectAction.IsMatch(DY.UrlRewriter.RewriteContext)">
            <summary>
            Determines if the rewrite rule matches.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:DY.UrlRewriter.Actions.RedirectAction.Conditions">
            <summary>
            Conditions that must hold for the rule to fire.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Actions.MethodNotAllowedAction">
            <summary>
            Returns a 405 Method Not Allowed HTTP status code.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Actions.MethodNotAllowedAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Utilities.HttpContextFacade">
            <summary>
            A naive pass-through implementation of the ContextFacade on the HttpContext.
            Mock implementations would want to do something more interesting like implement checks that
            the actions were called.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.HttpContextFacade.GetApplicationPath">
            <summary>
            Retrieves the application path.
            </summary>
            <returns>The application path.</returns>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.HttpContextFacade.GetRawUrl">
            <summary>
            Retrieves the raw url.
            </summary>
            <returns>The raw url.</returns>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.HttpContextFacade.GetRequestUrl">
            <summary>
            Retrieves the current request url.
            </summary>
            <returns>The request url.</returns>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.HttpContextFacade.InternalMapPath(System.String)">
            <summary>
            Maps the url to the local file path.
            </summary>
            <param name="url">The url to map.</param>
            <returns>The local file path.</returns>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.HttpContextFacade.SetStatusCode(System.Int32)">
            <summary>
            Sets the status code for the response.
            </summary>
            <param name="code">The status code.</param>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.HttpContextFacade.RewritePath(System.String)">
            <summary>
            Rewrites the request to the new url.
            </summary>
            <param name="url">The new url to rewrite to.</param>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.HttpContextFacade.SetRedirectLocation(System.String)">
            <summary>
            Sets the redirection location to the given url.
            </summary>
            <param name="url">The url of the redirection location.</param>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.HttpContextFacade.AppendHeader(System.String,System.String)">
            <summary>
            Appends a header to the response.
            </summary>
            <param name="name">The header name.</param>
            <param name="value">The header value.</param>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.HttpContextFacade.AppendCookie(System.Web.HttpCookie)">
            <summary>
            Adds a cookie to the response.
            </summary>
            <param name="cookie">The cookie to add.</param>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.HttpContextFacade.HandleError(DY.UrlRewriter.IRewriteErrorHandler)">
            <summary>
            Handles an error with the error handler.
            </summary>
            <param name="handler">The error handler to use.</param>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.HttpContextFacade.SetItem(System.Object,System.Object)">
            <summary>
            Sets a context item.
            </summary>
            <param name="item">The item key</param>
            <param name="value">The item value</param>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.HttpContextFacade.GetItem(System.Object)">
            <summary>
            Retrieves a context item.
            </summary>
            <param name="item">The item key.</param>
            <returns>The item value.</returns>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.HttpContextFacade.GetHttpMethod">
            <summary>
            Retrieves the HTTP method used by the request.
            </summary>
            <returns>The HTTP method.</returns>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.HttpContextFacade.GetServerVariables">
            <summary>
            Gets a collection of server variables.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.HttpContextFacade.GetHeaders">
            <summary>
            Gets a collection of headers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.HttpContextFacade.GetCookies">
            <summary>
            Gets a collection of cookies.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DY.UrlRewriter.Utilities.Constants">
            <summary>
            Constants for the parser.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Parsers.RewriteActionParser">
            <summary>
            Summary description for RewriteActionParser.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.RewriteActionParser.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.RewriteActionParser.Parse(System.Xml.XmlNode,System.Object)">
            <summary>
            Parses the node.
            </summary>
            <param name="node">The node to parse.</param>
            <param name="config">The rewriter configuration.</param>
            <returns>The parsed action, or null if no action parsed.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.RewriteActionParser.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.RewriteActionParser.AllowsNestedActions">
            <summary>
            Whether the action allows nested actions.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.RewriteActionParser.AllowsAttributes">
            <summary>
            Whether the action allows attributes.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Parsers.GoneActionParser">
            <summary>
            Summary description for GoneActionParser.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.GoneActionParser.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.GoneActionParser.Parse(System.Xml.XmlNode,System.Object)">
            <summary>
            Parses the node.
            </summary>
            <param name="node">The node to parse.</param>
            <param name="config">The rewriter configuration.</param>
            <returns>The parsed action, or null if no action parsed.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.GoneActionParser.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.GoneActionParser.AllowsNestedActions">
            <summary>
            Whether the action allows nested actions.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.GoneActionParser.AllowsAttributes">
            <summary>
            Whether the action allows attributes.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Parsers.ForbiddenActionParser">
            <summary>
            Summary description for ForbiddenActionParser.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.ForbiddenActionParser.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.ForbiddenActionParser.Parse(System.Xml.XmlNode,System.Object)">
            <summary>
            Parses the node.
            </summary>
            <param name="node">The node to parse.</param>
            <param name="config">The rewriter configuration.</param>
            <returns>The parsed action, or null if no action parsed.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.ForbiddenActionParser.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.ForbiddenActionParser.AllowsNestedActions">
            <summary>
            Whether the action allows nested actions.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.ForbiddenActionParser.AllowsAttributes">
            <summary>
            Whether the action allows attributes.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Conditions.ExistsCondition">
            <summary>
            Condition that tests the existence of a file.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Conditions.ExistsCondition.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="location"></param>
        </member>
        <member name="M:DY.UrlRewriter.Conditions.ExistsCondition.IsMatch(DY.UrlRewriter.RewriteContext)">
            <summary>
            Determines if the condition is matched.
            </summary>
            <param name="context">The rewriting context.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="T:DY.UrlRewriter.RewriterHttpModule">
            <summary>
            Rewrites urls based on patterns and conditions specified in the configuration file.  
            This class cannot be inherited.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.RewriterHttpModule.System#Web#IHttpModule#Init(System.Web.HttpApplication)">
            <summary>
            Initialises the module.
            </summary>
            <param name="context">The application context.</param>
        </member>
        <member name="M:DY.UrlRewriter.RewriterHttpModule.System#Web#IHttpModule#Dispose">
            <summary>
            Disposes of the module.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.RewriterHttpModule.ResolveLocation(System.String)">
            <summary>
            Resolves an Application-path relative location
            </summary>
            <param name="location">The location</param>
            <returns>The absolute location.</returns>
        </member>
        <member name="P:DY.UrlRewriter.RewriterHttpModule.Configuration">
            <summary>
            Configuration of the rewriter.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.RewriterHttpModule.OriginalQueryString">
            <summary>
            The original query string.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.RewriterHttpModule.QueryString">
            <summary>
            The final querystring, after rewriting.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.RewriterHttpModule.RawUrl">
            <summary>
            The raw url, before rewriting.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.IRewriteErrorHandler">
            <summary>
            Interface for rewriter error handlers.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.IRewriteErrorHandler.HandleError(System.Web.HttpContext)">
            <summary>
            Handles the error.
            </summary>
            <param name="context">The HTTP context.</param>
        </member>
        <member name="T:DY.UrlRewriter.RewriteFormHtmlTextWriter">
            <summary>
            The HTML Text Writer to use for rewriting form actions.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.RewriteFormHtmlTextWriter.#ctor(System.Web.UI.HtmlTextWriter)">
            <summary>
            Constructor
            </summary>
            <param name="writer">The writer to use.</param>
        </member>
        <member name="M:DY.UrlRewriter.RewriteFormHtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
            <summary>
            Writes an attribute
            </summary>
            <param name="name">Name of the attribute</param>
            <param name="value">Value of the attribute</param>
            <param name="fEncode"></param>
        </member>
        <member name="T:DY.UrlRewriter.Transforms.Base64Transform">
            <summary>
            Base 64 encodes the input.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Transforms.Base64Transform.ApplyTransform(System.String)">
            <summary>
            Applies a transformation to the input string.
            </summary>
            <param name="input">The input string.</param>
            <returns>The transformed string.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Transforms.Base64Transform.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Parsers.AddHeaderActionParser">
            <summary>
            Action parser for the add-header action.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.AddHeaderActionParser.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.AddHeaderActionParser.Parse(System.Xml.XmlNode,System.Object)">
            <summary>
            Parses the node.
            </summary>
            <param name="node">The node to parse.</param>
            <param name="config">The rewriter configuration.</param>
            <returns>The parsed action, or null if no action parsed.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.AddHeaderActionParser.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.AddHeaderActionParser.AllowsNestedActions">
            <summary>
            Whether the action allows nested actions.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.AddHeaderActionParser.AllowsAttributes">
            <summary>
            Whether the action allows attributes.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Logging.NullLogger">
            <summary>
            A logger which does nothing.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Logging.NullLogger.Debug(System.Object)">
            <summary>
            Writes a debug message.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:DY.UrlRewriter.Logging.NullLogger.Info(System.Object)">
            <summary>
            Writes an informational message.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:DY.UrlRewriter.Logging.NullLogger.Warn(System.Object)">
            <summary>
            Writes a warning message.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:DY.UrlRewriter.Logging.NullLogger.Error(System.Object)">
            <summary>
            Writes an error.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:DY.UrlRewriter.Logging.NullLogger.Error(System.Object,System.Exception)">
            <summary>
            Writes an error.
            </summary>
            <param name="message">The message to write.</param>
            <param name="exception">The exception</param>
        </member>
        <member name="M:DY.UrlRewriter.Logging.NullLogger.Fatal(System.Object,System.Exception)">
            <summary>
            Writes a fatal error.
            </summary>
            <param name="message">The message to write.</param>
            <param name="exception">The exception</param>
        </member>
        <member name="T:DY.UrlRewriter.Logging.DebugLogger">
            <summary>
            A logger which writes out to the Debug window.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Logging.DebugLogger.Debug(System.Object)">
            <summary>
            Writes a debug message.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:DY.UrlRewriter.Logging.DebugLogger.Info(System.Object)">
            <summary>
            Writes an informational message.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:DY.UrlRewriter.Logging.DebugLogger.Warn(System.Object)">
            <summary>
            Writes a warning message.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:DY.UrlRewriter.Logging.DebugLogger.Error(System.Object)">
            <summary>
            Writes an error.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:DY.UrlRewriter.Logging.DebugLogger.Error(System.Object,System.Exception)">
            <summary>
            Writes an error.
            </summary>
            <param name="message">The message to write.</param>
            <param name="exception">The exception</param>
        </member>
        <member name="M:DY.UrlRewriter.Logging.DebugLogger.Fatal(System.Object,System.Exception)">
            <summary>
            Writes a fatal error.
            </summary>
            <param name="message">The message to write.</param>
            <param name="exception">The exception</param>
        </member>
        <member name="T:DY.UrlRewriter.Conditions.UrlMatchCondition">
            <summary>
            Matches on the current URL.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Conditions.UrlMatchCondition.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="pattern"></param>
        </member>
        <member name="M:DY.UrlRewriter.Conditions.UrlMatchCondition.IsMatch(DY.UrlRewriter.RewriteContext)">
            <summary>
            Determines if the condition is matched.
            </summary>
            <param name="context">The rewriting context.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Conditions.UrlMatchCondition.Pattern">
            <summary>
            The pattern to match.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Utilities.TypeHelper">
            <summary>
            Helper class for dealing with types.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.TypeHelper.Activate(System.String,System.Object[])">
            <summary>
            Loads and activates a type
            </summary>
            <param name="fullTypeName">The full name of the type to activate "TypeName, AssemblyName"</param>
            <param name="args">Arguments to pass to the constructor</param>
            <returns>The object</returns>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.TypeHelper.Activate(System.String,System.String,System.Object[])">
            <summary>
            Loads and activates a type
            </summary>
            <param name="assemblyName">The assembly name</param>
            <param name="typeName">The type name</param>
            <param name="args">Arguments to pass to the constructor</param>
            <returns>The object</returns>
        </member>
        <member name="T:DY.UrlRewriter.Configuration.RewriterConfigurationReader">
            <summary>
            Reads configuration from an XML Node.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Configuration.RewriterConfigurationReader.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Configuration.RewriterConfigurationReader.Read(System.Xml.XmlNode)">
            <summary>
            Reads configuration information from the given XML Node.
            </summary>
            <param name="section">The XML node to read configuration from.</param>
            <returns>The configuration information.</returns>
        </member>
        <member name="T:DY.UrlRewriter.Actions.SetPropertyAction">
            <summary>
            Action that sets properties in the context.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Actions.SetPropertyAction.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">The name of the value.</param>
        </member>
        <member name="M:DY.UrlRewriter.Actions.SetPropertyAction.Execute(DY.UrlRewriter.RewriteContext)">
            <summary>
            Executes the action.
            </summary>
            <param name="context">The rewrite context.</param>
        </member>
        <member name="P:DY.UrlRewriter.Actions.SetPropertyAction.Name">
            <summary>
            The name of the variable.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Actions.SetPropertyAction.Value">
            <summary>
            The value of the variable.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Actions.GoneAction">
            <summary>
            Returns a 410 Gone HTTP status code.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Actions.GoneAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Utilities.IPRange">
            <summary>
            Represents a range of IP addresses.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.IPRange.#ctor(System.Net.IPAddress)">
            <summary>
            Constructor.
            </summary>
            <param name="address">A range of 1 ip address.</param>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.IPRange.#ctor(System.Net.IPAddress,System.Net.IPAddress)">
            <summary>
            Constructor.
            </summary>
            <param name="minimumAddress">Lowest IP address.</param>
            <param name="maximumAddress">Highest IP address.</param>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.IPRange.Parse(System.String)">
            <summary>
            Parses an IP address range.
            </summary>
            <remarks>
            ddd.ddd.ddd.ddd - single IP address
            ddd.ddd.ddd.* - class C range
            ddd.ddd.* - class B range
            ddd.* - class A range
            ddd.ddd.ddd.ddd - ccc.ccc.ccc.ccc - specific range
            </remarks>
            <param name="pattern">The pattern</param>
            <returns>The IPRange instance.</returns>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.IPRange.InRange(System.Net.IPAddress)">
            <summary>
            Deteremines if the given IP address is in the range.
            </summary>
            <param name="address">The IP address.</param>
            <returns>True if the address is in the range.</returns>
        </member>
        <member name="M:DY.UrlRewriter.Utilities.IPRange.Compare(System.Net.IPAddress,System.Net.IPAddress)">
            <summary>
            Compares two IPAddresses.
            Less than zero {left} is less than {right}.
            Zero {left} equals {right}. 
            Greater than zero {left} is greater than {right}. 
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="P:DY.UrlRewriter.Utilities.IPRange.MinimumAddress">
            <summary>
            Minimum address (inclusive).
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Utilities.IPRange.MaximumAddress">
            <summary>
            Maximum address (inclusive).
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Parsers.SetPropertyActionParser">
            <summary>
            Action parser for the set-Property action.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.SetPropertyActionParser.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.SetPropertyActionParser.Parse(System.Xml.XmlNode,System.Object)">
            <summary>
            Parses the node.
            </summary>
            <param name="node">The node to parse.</param>
            <param name="config">The rewriter configuration.</param>
            <returns>The parsed action, or null if no action parsed.</returns>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.SetPropertyActionParser.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.SetPropertyActionParser.AllowsNestedActions">
            <summary>
            Whether the action allows nested actions.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.Parsers.SetPropertyActionParser.AllowsAttributes">
            <summary>
            Whether the action allows attributes.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Errors.DefaultErrorHandler">
            <summary>
            Summary description for DefaultErrorHandler.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Errors.DefaultErrorHandler.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="url">Url of the error page.</param>
        </member>
        <member name="M:DY.UrlRewriter.Errors.DefaultErrorHandler.HandleError(System.Web.HttpContext)">
            <summary>
            Handles the error by rewriting to the error page url.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:DY.UrlRewriter.RewriterEngine">
            <summary>
            The core RewriterEngine class.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.RewriterEngine.#ctor(DY.UrlRewriter.Utilities.IContextFacade,DY.UrlRewriter.Configuration.RewriterConfiguration)">
            <summary>
            Constructor.
            </summary>
            <param name="contextFacade">The context facade to use.</param>
            <param name="configuration">The configuration to use.</param>
        </member>
        <member name="M:DY.UrlRewriter.RewriterEngine.ResolveLocation(System.String)">
            <summary>
            Resolves an Application-path relative location
            </summary>
            <param name="location">The location</param>
            <returns>The absolute location.</returns>
        </member>
        <member name="M:DY.UrlRewriter.RewriterEngine.Rewrite">
            <summary>
            Performs the rewriting.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.RewriterEngine.Expand(DY.UrlRewriter.RewriteContext,System.String)">
            <summary>
            Expands the given input based on the current context.
            </summary>
            <param name="context">The current context</param>
            <param name="input">The input to expand.</param>
            <returns>The expanded input</returns>
        </member>
        <member name="P:DY.UrlRewriter.RewriterEngine.RawUrl">
            <summary>
            The raw url.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.RewriterEngine.OriginalQueryString">
            <summary>
            The original query string.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.RewriterEngine.QueryString">
            <summary>
            The final querystring, after rewriting.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.RewriteContext">
            <summary>
            Encapsulates all rewriting information about an individual rewrite request.  This class cannot be inherited.
            </summary>
            <remarks>
            This class cannot be created directly.  It will be provided to actions and conditions
            by the framework.
            </remarks>
        </member>
        <member name="M:DY.UrlRewriter.RewriteContext.#ctor(DY.UrlRewriter.RewriterEngine,System.String,System.String,DY.UrlRewriter.Utilities.MapPath,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Web.HttpCookieCollection)">
            <summary>
            Default constructor.
            </summary>
            <param name="engine">The rewriting engine.</param>
            <param name="rawUrl">The initial, raw URL.</param>
            <param name="httpMethod">The HTTP method used (GET, POST, ...)</param>
            <param name="mapPath">The method to use for mapping paths.</param>
            <param name="serverVariables">Collection of server variables.</param>
            <param name="headers">Collection of headers.</param>
            <param name="cookies">Collection of cookies.</param>
        </member>
        <member name="M:DY.UrlRewriter.RewriteContext.MapPath(System.String)">
            <summary>
            Maps the given URL to the absolute local path.
            </summary>
            <param name="url">The URL to map.</param>
            <returns>The absolute local file path relating to the url.</returns>
        </member>
        <member name="M:DY.UrlRewriter.RewriteContext.Expand(System.String)">
            <summary>
            Expands the given input using the last match, properties, maps and transforms.
            </summary>
            <param name="input">The input to expand.</param>
            <returns>The expanded form of the input.</returns>
        </member>
        <member name="M:DY.UrlRewriter.RewriteContext.ResolveLocation(System.String)">
            <summary>
            Resolves the location to an absolute reference.
            </summary>
            <param name="location">The application-referenced location.</param>
            <returns>The absolute location.</returns>
        </member>
        <member name="P:DY.UrlRewriter.RewriteContext.Location">
            <summary>
            The current location being rewritten.
            </summary>
            <remarks>
            This property starts out as Request.RawUrl and is altered by various
            rewrite actions.
            </remarks>
        </member>
        <member name="P:DY.UrlRewriter.RewriteContext.Method">
            <summary>
            The request method (GET, PUT, POST, HEAD, DELETE).
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.RewriteContext.Properties">
            <summary>
            The properties for the context, including headers and cookie values.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.RewriteContext.Headers">
            <summary>
            Output headers.
            </summary>
            <remarks>
            This collection is the collection of headers to add to the response.
            For the headers sent in the request, use the <see cref="P:DY.UrlRewriter.RewriteContext.Properties">Properties</see> property.
            </remarks>
        </member>
        <member name="P:DY.UrlRewriter.RewriteContext.StatusCode">
            <summary>
            The status code to send in the response.
            </summary>
        </member>
        <member name="P:DY.UrlRewriter.RewriteContext.Cookies">
            <summary>
            Collection of output cookies.
            </summary>
            <remarks>
            This is the collection of cookies to send in the response.  For the cookies
            received in the request, use the <see cref="P:DY.UrlRewriter.RewriteContext.Properties">Properties</see> property.
            </remarks>
        </member>
        <member name="P:DY.UrlRewriter.RewriteContext.LastMatch">
            <summary>
            Last matching pattern from a match (if any).
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Parsers.PropertyMatchConditionParser">
            <summary>
            Parser for property match conditions.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Parsers.PropertyMatchConditionParser.Parse(System.Xml.XmlNode)">
            <summary>
            Parses the condition.
            </summary>
            <param name="node">The node to parse.</param>
            <returns>The condition parsed, or null if nothing parsed.</returns>
        </member>
        <member name="T:DY.UrlRewriter.Actions.NotImplementedAction">
            <summary>
            Returns a 501 Not Implemented HTTP status code.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Actions.NotImplementedAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:DY.UrlRewriter.Actions.ForbiddenAction">
            <summary>
            Returns a 403 Forbidden HTTP status code.
            </summary>
        </member>
        <member name="M:DY.UrlRewriter.Actions.ForbiddenAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
    </members>
</doc>
