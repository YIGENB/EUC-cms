<?xml version="1.0" encoding="utf-8"?>
<!--注意：配置文件必须放在网站的根目录-->
<!--注意：配置文件是区分大小写的。-->
<configuration>
  <base>
    <!--DES加密/解密KEY-->
    <!--使用Cookie缓存时为提高安全性，请务必自行修改-->
    <desKey>dsWBM123</desKey>
    <!--缓存模式-->
    <!--目前仅支持 cookie|session-->
    <cacheMode>cookie</cacheMode>
  </base>
  <oauth>
    <!--
    提示：未通过审核的APPKey调试时，可以使用修改hosts文件加IIS来模拟实现测试。
    1、例如：hosts文件加入以下代码
        本地地址      页面实际地址(和平台上的一致)
        127.0.0.1     www.ctmon.com     
    2、IIS网站主机头填写www.ctmon.com
    3、浏览器直接输入http://www.ctmon.com就可以调试本地网站了
    -->
    <!--协议
      每一种协议都引用一个类/类库。
      -->
    <sina cnname="新浪微博" desc="极具影响力的微博，拥有超过5亿注册用户、超过30万认证用户，其中有13万多家企业与机构账户" isat="1">
      <!--协议
      sina: 新浪微博，引用SinaOAuth类。
      每一种协议都引用一个类/类库。
      -->
      <app>
        <!--第一个应用
        my_app: 自定义名称，可修改。
        配置第二个应用时只添加一个新的app节点即可
        -->
        <my_app>
          <!--
          clientId: 申请应用时分配的AppKey。
          clientSecret: 申请应用时分配的AppSecret。
          redirectUri: 应用回调页，当用户授权你的应用后，开放平台会回调你填写的这个地址。如:http://您的域名/redirecturi.aspx
          userName: 用户名，可选项
          password: 用户密码，可选项
          scope：若不传递此参数，代表请求用户的默认权限。
          -->
          <clientId>2392689080</clientId>
          <clientSecret>6b004d4cc5f83ab0f425325b6f291ed5</clientSecret>
          <redirectUri>http://www.eyouc.com/api/oauth_return.aspx</redirectUri>
          <randomAT>
            鸿蒙旭日
            蒙旭商学院
            任任小义
            创同盟
          </randomAT>
          <access_token>2.00BZAgXG3jTvbCbcdfd0c56cEQNGRB</access_token>
          <uid>5994428027</uid>
          <!--
          <userName></userName>
          <password></password>
          -->
        </my_app>
      </app>
      <api>
        <!--OAUTH2.0协议接口-->
        <authorize>https://api.weibo.com/oauth2/authorize</authorize>
        <access_token>https://api.weibo.com/oauth2/access_token</access_token>
        <!--OAUTH2.0协议接口-->
        <!--API接口 必须使用https协议-->
        <!--API接口使用方法和参数请参数官方文档：http://open.weibo.com/wiki/ -->
        <!--错误误请参照地址：http://open.weibo.com/wiki/Error_code -->
        <!--用户接口-->
        <users_show>https://api.weibo.com/2/users/show.json</users_show>
        <!--用户接口-->
        <!--微博接口-->
        <statuses_user_timeline>https://api.weibo.com/2/statuses/user_timeline.json</statuses_user_timeline>
        <statuses_show>https://api.weibo.com/2/statuses/show.json</statuses_show>
        <statuses_update>https://api.weibo.com/2/statuses/update.json</statuses_update>
        <statuses_upload>https://api.weibo.com/2/statuses/upload.json</statuses_upload>
        <!--微博接口-->
        <!--关系接口-->
        <friendships_friends>https://api.weibo.com/2/friendships/friends.json</friendships_friends>
        <friendships_followers>https://api.weibo.com/2/friendships/followers.json</friendships_followers>
        <friendships_create>https://api.weibo.com/2/friendships/create.json</friendships_create>
        <friendships_destroy>https://api.weibo.com/2/friendships/destroy.json</friendships_destroy>
        <friendships_show>https://api.weibo.com/2/friendships/show.json</friendships_show>
        <!--关系接口-->
        <!--账号接口-->
        <account_get_uid>https://api.weibo.com/2/account/get_uid.json</account_get_uid>
        <!--账号接口-->
        <!--API接口 必须使用https协议-->
      </api>
    </sina>
    <toutiao cnname="头条" desc="头条(或称头题)是一个版上最重要的稿件，通常都入在最显著的版位，并运用各种编排手段加以突出。详情请查看https://open.mp.toutiao.com">
      <!--协议
      toutiao: 头条，引用QzoneOAuth类。
      每一种协议都引用一个类/类库。
      -->
      <app>
        <!--第一个应用
        my_app: 自定义名称，可修改。
        配置第二个应用时只添加一个新的app节点即可
        -->
        <my_app>
          <!--
          clientId: 申请应用时分配的AppKey。
          clientSecret: 申请应用时分配的AppSecret。
          redirectUri: 应用回调页，当用户授权你的应用后，开放平台会回调你填写的这个地址。如:http://您的域名/redirecturi.aspx
          userName: 用户名，可选项
          password: 用户密码，可选项
          scope：请求用户授权时向用户显示的可进行授权的列表 例如：scope=get_user_info,list_album,upload_pic,do_like response_type
          -->
          <clientId>c8808a97ed04da65</clientId>
          <clientSecret>dca90384fb7366cc3a3a78e0f958f31d</clientSecret>
          <response_type>code</response_type>
          <auth_only>1</auth_only>
          <display>2</display>
          <redirectUri>http://localhost:1173/api/oauth_return.aspx</redirectUri>
          <access_token>
          </access_token>
          <uid>
          </uid>
        </my_app>
      </app>
      <api>
        <!--OAUTH2.0协议接口-->
        <authorize>https://open.snssdk.com/auth/authorize/</authorize>
        <access_token>https://open.snssdk.com/auth/token/</access_token>
        <!--OAUTH2.0协议接口-->
        <!--API接口 必须使用https协议-->
        <!--API接口使用方法和参数请参数官方文档：http://mp.toutiao.com-->
        <!--错误误请参照地址：http://http://mp.toutiao.com/static/resource/pgc/api.html -->
        <!--用户接口-->
        <user_get_user_info>https://open.snssdk.com/data/user_profile/</user_get_user_info>
        <!--用户接口-->
        <!--发文接口-->
        <new_article_post>https://mp.toutiao.com/open/new_article_post/</new_article_post>
        <!--发文接口-->
        <!--API接口 必须使用https协议-->
      </api>
    </toutiao>
    <weixin cnname="微信" desc="微信开放平台帐号的开发者资质认证提供更安全、更严格的真实性认证、也能够更好的保护企业及用户的合法权益；开发者资质认证通过后，微信开放平台帐号下的应用，将获得微信登录、智能接口、公众号第三方平台开发等高级能力；认证有效期：一年，有效期最后两个月可申请年审即可续期；审核费用：300元。详情请查看https://open.weixin.qq.com">
      <!--协议
      qzone: QQ空间，引用QzoneOAuth类。
      每一种协议都引用一个类/类库。
      -->
      <app>
        <!--第一个应用
        my_app: 自定义名称，可修改。
        配置第二个应用时只添加一个新的app节点即可
        -->
        <my_app>
          <!--
          clientId: 申请应用时分配的AppKey。
          clientSecret: 申请应用时分配的AppSecret。
          redirectUri: 应用回调页，当用户授权你的应用后，开放平台会回调你填写的这个地址。如:http://您的域名/redirecturi.aspx
          userName: 用户名，可选项
          password: 用户密码，可选项
          scope：请求用户授权时向用户显示的可进行授权的列表 例如：scope=get_user_info,list_album,upload_pic,do_like response_type
          -->
          <scope>snsapi_login</scope>
          <clientId>wxcd8b0ba6aefd03ab</clientId>
          <appid>wxa3d31700ecd05bb8</appid>
          <response_type>code</response_type>
          <clientSecret>53f3c1dbc9f97cc1814d21b9c22040f3</clientSecret>
          <redirectUri>http://www.eyouc.com/api/oauth_return.aspx</redirectUri>
          <access_token>
          </access_token>
          <uid>
          </uid>
        </my_app>
      </app>
      <api>
        <!--OAUTH2.0协议接口-->
        <authorize>https://open.weixin.qq.com/connect/qrconnect</authorize>
        <access_token>https://api.weixin.qq.com/sns/oauth2/access_token</access_token>
        <me>https://api.weixin.qq.com/oauth2/me</me>
        <!--OAUTH2.0协议接口-->
        <!--API接口 必须使用https协议-->
        <!--API接口使用方法和参数请参数官方文档：http://connect.qq.com/intro/login/ -->
        <!--错误误请参照地址：http://wiki.connect.qq.com -->
        <!--用户接口-->
        <user_get_user_info>https://api.weixin.qq.com/sns/userinfo</user_get_user_info>
        <!--用户接口-->
        <!--API接口 必须使用https协议-->
      </api>
    </weixin>
    <tenc cnname="腾讯微博" desc="由腾讯公司推出，提供微型博客服务的类Twitter网站">
      <!--协议
      tenc: 腾讯微博，引用TencOAuth类。
      每一种协议都引用一个类/类库。
      -->
      <app>
        <!--第一个应用
        my_app: 自定义名称，可修改。
        配置第二个应用时只添加一个新的app节点即可
        -->
        <my_app>
          <!--
          clientId: 申请应用时分配的AppKey。
          clientSecret: 申请应用时分配的AppSecret。
          redirectUri: 应用回调页，当用户授权你的应用后，开放平台会回调你填写的这个地址。如:http://您的域名/redirecturi.aspx
          userName: 用户名，可选项
          password: 用户密码，可选项
          scope：若不传递此参数，代表请求用户的默认权限。
          -->
          <clientId>801176666</clientId>
          <clientSecret>855818922405d09713a532aa1173ebc1</clientSecret>
          <redirectUri>http://www.eyouc.com/api/oauth_return.aspx</redirectUri>
          <access_token>
          </access_token>
          <uid>
          </uid>
          <!--
          <userName></userName>
          <password></password>
          -->
        </my_app>
      </app>
      <api>
        <!--OAUTH2.0协议接口-->
        <authorize>https://open.t.qq.com/cgi-bin/oauth2/authorize</authorize>
        <access_token>https://open.t.qq.com/cgi-bin/oauth2/access_token</access_token>
        <!--OAUTH2.0协议接口-->
        <!--API接口 必须使用https协议-->
        <!--API接口使用方法和参数请参数官方文档：http://wiki.open.t.qq.com/index.php/API%E6%96%87%E6%A1%A3 -->
        <!--错误误请参照地址：http://wiki.open.t.qq.com/index.php/OAuth2.0%E9%89%B4%E6%9D%83/%E9%94%99%E8%AF%AF%E7%A0%81%E8%AF%B4%E6%98%8E -->
        <!--用户相关接口-->
        <user_info>https://open.t.qq.com/api/user/info</user_info>
        <friends_fanslist>https://open.t.qq.com/api/friends/fanslist</friends_fanslist>
        <!--用户相关接口-->
        <!--时间线接口-->
        <statuses_broadcast_timeline>https://open.t.qq.com/api/statuses/broadcast_timeline</statuses_broadcast_timeline>
        <!--时间线接口-->
        <!--微博相关接口-->
        <t_show>https://open.t.qq.com/api/t/show</t_show>
        <t_add>https://open.t.qq.com/api/t/add</t_add>
        <t_add_pic>https://open.t.qq.com/api/t/add_pic</t_add_pic>
        <!--微博相关接口-->
        <!--API接口 必须使用https协议-->
      </api>
    </tenc>
    <qzone cnname="QQ空间" desc="QQ空间">
      <!--协议
      qzone: QQ空间，引用QzoneOAuth类。
      每一种协议都引用一个类/类库。
      -->
      <app>
        <!--第一个应用
        my_app: 自定义名称，可修改。
        配置第二个应用时只添加一个新的app节点即可
        -->
        <my_app>
          <!--
          clientId: 申请应用时分配的AppKey。
          clientSecret: 申请应用时分配的AppSecret。
          redirectUri: 应用回调页，当用户授权你的应用后，开放平台会回调你填写的这个地址。如:http://您的域名/redirecturi.aspx
          userName: 用户名，可选项
          password: 用户密码，可选项
          scope：请求用户授权时向用户显示的可进行授权的列表 例如：scope=get_user_info,list_album,upload_pic,do_like
          -->
          <scope>get_user_info</scope>
          <clientId>101351360</clientId>
          <clientSecret>4cb7a035b5a56aee6fd47c53c7c1ed53</clientSecret>
          <redirectUri>http://www.eyouc.com/api/oauth_return.aspx</redirectUri>
          <access_token>
          </access_token>
          <uid>
          </uid>
        </my_app>
      </app>
      <api>
        <!--OAUTH2.0协议接口-->
        <authorize>https://graph.qq.com/oauth2.0/authorize</authorize>
        <access_token>https://graph.qq.com/oauth2.0/token</access_token>
        <me>https://graph.qq.com/oauth2.0/me</me>
        <!--OAUTH2.0协议接口-->
        <!--API接口 必须使用https协议-->
        <!--API接口使用方法和参数请参数官方文档：http://connect.qq.com/intro/login/ -->
        <!--错误误请参照地址：http://wiki.connect.qq.com -->
        <!--用户接口-->
        <user_get_user_info>https://graph.qq.com/user/get_user_info</user_get_user_info>
        <!--用户接口-->
        <!--微博相关接口-->
        <t_add>https://graph.qq.com/t/add_t</t_add>
        <t_add_pic>https://graph.qq.com/t/add_pic_t</t_add_pic>
        <!--微博相关接口-->
        <!--API接口 必须使用https协议-->
      </api>
    </qzone>
    <renren cnname="人人网" desc="校内是一个真实的社交网络,联络你和你周围的朋友">
      <!--协议
    renren: 人人网，引用RenrenOAuth类。
    每一种协议都引用一个类/类库。
    -->
      <app>
        <!--第一个应用
        my_app: 自定义名称，可修改。
        配置第二个应用时只添加一个新的app节点即可
        -->
        <my_app>
          <!--
          clientId: 申请应用时分配的AppKey。
          clientSecret: 申请应用时分配的AppSecret。
          redirectUri: 应用回调页，当用户授权你的应用后，开放平台会回调你填写的这个地址。如:http://您的域名/redirecturi.aspx
          userName: 用户名，可选项
          password: 用户密码，可选项
          scope：若不传递此参数，代表请求用户的默认权限。每个权限使用空格（' '）隔开。
          -->
          <scope>read_user_blog publish_blog</scope>
          <clientId>afa3bd65d89844c49176675673de40df</clientId>
          <clientSecret>8a8914f0694d424e8994af35129a2ee5</clientSecret>
          <redirectUri>http://localhost:1411/redirecturi.aspx</redirectUri>
          <access_token>
          </access_token>
          <uid>
          </uid>
        </my_app>
      </app>
      <api>
        <!--OAUTH2.0协议接口-->
        <authorize>https://graph.renren.com/oauth/authorize</authorize>
        <access_token>https://graph.renren.com/oauth/token</access_token>
        <!--OAUTH2.0协议接口-->
        <!--API接口 必须使用https协议-->
        <!--API接口使用方法和参数请参数官方文档：http://wiki.dev.renren.com/wiki/API -->
        <!--API Server URL-->
        <restserver>http://api.renren.com/restserver.do</restserver>
        <!--API Server URL-->
        <!--API 获取用户信息-->
        <user_get>https://api.renren.com/v2/user/get</user_get>
        <!--API 获取用户状态列表-->
        <status_list>https://api.renren.com/v2/status/list</status_list>
        <!--API 获取用户状态列表-->
        <!--API 获取用户状态-->
        <status_get>https://api.renren.com/v2/status/get</status_get>
        <!--API 获取用户状态-->
        <!--API 更新用户状态-->
        <status_put>https://api.renren.com/v2/status/put</status_put>
        <!--API 更新用户状态-->
        <!--API 获取当前登录用户信息-->
        <user_login_get>https://api.renren.com/v2/user/login/get</user_login_get>
        <!--API 获取当前登录用户信息-->
      </api>
    </renren>
    <kaixin cnname="开心网" desc="开心网是中国最大的SNS社交网站，通过它你可以随时随地与朋友、同学、同事、家人保持紧密的联系，了解他们的动态、分享你的生活点滴，同时体验最新最流行的白领游戏">
      <!--协议
      kaixin: 开心网，引用KaixinOAuth类。
      每一种协议都引用一个类/类库。
      -->
      <app>
        <!--第一个应用
        my_app: 自定义名称，可修改。
        配置第二个应用时只添加一个新的app节点即可
        -->
        <my_app>
          <!--
          clientId: 申请应用时分配的AppKey。
          clientSecret: 申请应用时分配的AppSecret。
          redirectUri: 应用回调页，当用户授权你的应用后，开放平台会回调你填写的这个地址。如:http://您的域名/redirecturi.aspx
          userName: 用户名，可选项
          password: 用户密码，可选项
          scope：以空格分隔的权限列表，若不传递此参数，代表请求默认的basic权限。
          -->
          <clientId>817752295614e988873aa6cc0d02a277</clientId>
          <clientSecret>87cd8315f223c123d5deea97253f8494</clientSecret>
          <redirectUri>http://www.eyouc.com/api/oauth_return.aspx</redirectUri>
          <uid>
          </uid>
          <scope>basic create_records user_records friends_records</scope>
        </my_app>
      </app>
      <api>
        <!--OAUTH2.0协议接口-->
        <authorize>http://api.kaixin001.com/oauth2/authorize</authorize>
        <access_token>https://api.kaixin001.com/oauth2/access_token</access_token>
        <!--OAUTH2.0协议接口-->
        <!--API接口 必须使用https协议-->
        <!--API接口使用方法和参数请参数官方文档：http://wiki.open.kaixin001.com/index.php -->
        <!--API 获取当前登录用户的资料-->
        <users_me>https://api.kaixin001.com/users/me</users_me>
        <!--API 获取当前登录用户的资料-->
        <!--API 根据UID获取多个用户的资料-->
        <users_show>https://api.kaixin001.com/users/show</users_show>
        <!--API 根据UID获取多个用户的资料-->
        <!--获取我的记录列表-->
        <records_me>https://api.kaixin001.com/records/me</records_me>
        <!--获取我的记录列表-->
        <!--API 获取某一用户的记录列表-->
        <records_user>https://api.kaixin001.com/records/user</records_user>
        <!--API 获取某一用户的记录列表-->
        <!--API 发布一条记录(可以带一张图片)。所有接口仅支持UTF-8格式中文编码-->
        <records_add>https://api.kaixin001.com/records/add</records_add>
        <!--API 发布一条记录(可以带一张图片)。所有接口仅支持UTF-8格式中文编码-->
      </api>
    </kaixin>
    <neasy cnname="网易微博" desc="网易微博秉承让每个人都成为中心、做中国脉搏的思想,让个人的力量不再微薄">
      <!--协议
      neasy: 网易微博，引用NeasyOAuth类。
      每一种协议都引用一个类/类库。
      -->
      <app>
        <!--第一个应用
        my_app: 自定义名称，可修改。
        配置第二个应用时只添加一个新的app节点即可
        -->
        <my_app>
          <!--
          clientId: 申请应用时分配的AppKey。
          clientSecret: 申请应用时分配的AppSecret。
          redirectUri: 应用回调页，当用户授权你的应用后，开放平台会回调你填写的这个地址。如:http://您的域名/redirecturi.aspx
          userName: 用户名，可选项
          password: 用户密码，可选项
          scope：若不传递此参数，代表请求用户的默认权限。每个权限使用空格（' '）隔开。
           -->
          <clientId>UBsqFYzMUeyYsJWh</clientId>
          <clientSecret>Cx3JPfrgJymA47lg6QOfPDm0dwk2wl9L</clientSecret>
          <redirectUri>http://www.ctmon.com/redirecturi.aspx</redirectUri>
          <access_token>
          </access_token>
          <uid>
          </uid>
        </my_app>
      </app>
      <api>
        <!--OAUTH2.0协议接口-->
        <authorize>https://api.t.163.com/oauth2/authorize</authorize>
        <access_token>https://api.t.163.com/oauth2/access_token</access_token>
        <!--OAUTH2.0协议接口-->
        <!--API接口 必须使用https协议-->
        <!--API接口使用方法和参数请参数官方文档：http://open.t.163.com/wiki/ -->
        <!--错误误请参照地址：http://open.t.163.com/wiki/index.php?title=%E9%94%99%E8%AF%AF%E4%BB%A3%E7%A0%81(_error_code_) -->
        <!--用户接口-->
        <users_show>https://api.t.163.com/users/show.json</users_show>
        <!--用户接口-->
        <!--微博接口-->
        <statuses_show_id>https://api.t.163.com/statuses/show/{0}.json</statuses_show_id>
        <statuses_home_timeline>https://api.t.163.com/statuses/home_timeline.json</statuses_home_timeline>
        <statuses_upload>https://api.t.163.com/statuses/upload.json</statuses_upload>
        <statuses_update>https://api.t.163.com/statuses/update.json</statuses_update>
        <!--判断当前用户是否验证成功并返回该用户信息-->
        <account_verify_credentials>https://api.t.163.com/account/verify_credentials.json</account_verify_credentials>
        <!--判断当前用户是否验证成功并返回该用户信息-->
        <!--API接口 必须使用https协议-->
      </api>
    </neasy>
  </oauth>
</configuration>